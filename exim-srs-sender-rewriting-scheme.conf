#
# exim-srs-sender-rewriting-scheme.conf V1.00
#
# (C) Hajo Noerenberg 2012
#
# http://www.noerenberg.de/
# https://github.com/hn/exim-misc
#
# Based on ideas and code by
# David Woodhouse / http://www.infradead.org/rpr.html
# http://www.libsrs2.org/srs/srs.pdf
# http://www.openspf.org/SRS
#
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3.0 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/gpl-3.0.txt>.
#

SRS_DOMAIN			= mail.yourdomain.com
SRS_SECRET			= yOuR-s3cr3t-h3r3
SRS_OFFSET			= 14159
SRS_DSN_TIMEOUT			= 10

# These routers implement the SRS Sender Rewriting Scheme, insert before dnslookup router

# 1  user@source.com     user@source.com
# 2  alias@forward.com   SRS0=HHHHH=TTTT=source.com=user@forward.com
# 3  target@bouncer.com  SRS1=HHHHH=forward.com==HHHHH=TTTT=source.com=user@bouncer.com
# 4  relay.com           SRS1=HHHHH=forward.com==HHHHH=TTTT=source.com=user@relay.com

srs0_return:
	caseful_local_part
	domains = SRS_DOMAIN
	local_part_prefix = srs0=
	driver = redirect
	allow_fail
	data = ${if !match {$local_part}{\N^([^=]+)=([0-9]+)=([^=]+)=(.+)\N}{:fail: Malformed SRS0 bounce} \
	       {${if !eq {$1}{${length_5:${hmac{sha1}{SRS_SECRET}{${lc:$2&$3&$4}}}}}{:fail: Invalid SRS0 bounce} \
	       {${if <{$2}{${eval:$tod_epoch/86400-SRS_OFFSET-SRS_DSN_TIMEOUT}}{:fail: Invalid (expired) SRS0 bounce} \
	       {${quote_local_part:$4}@$3} \
	}}}}}
	headers_add = X-SRS-Return: DSN routed via $smtp_active_hostname (SRS0)

srs1_return:
	caseful_local_part
	domains = SRS_DOMAIN
	local_part_prefix = srs1=
	driver = redirect
	allow_fail
	data = ${if !match {$local_part}{\N^([^=]+)=([^=]+)==(.+)\N}{:fail: Malformed SRS1 bounce} \
	       {${if !eq {$1}{${length_5:${hmac{sha1}{SRS_SECRET}{${lc:$2&$3}}}}}{:fail: Invalid SRS1 bounce} \
	       {${quote_local_part:SRS0=$3}@$2} \
	}}}
	headers_add = X-SRS-Return: DSN routed via $smtp_active_hostname (SRS1)

srs_outgoing:
	caseful_local_part
	domains = ! +local_domains
	senders = ! : ! *@+local_domains
	errors_to = ${if match {$sender_address_local_part}{\N^[sS][rR][sS]0=(.+)\N} \
		    {${quote_local_part:SRS1=${length_5:${hmac{sha1}{SRS_SECRET}{${lc:$sender_address_domain&$1}}}}=$sender_address_domain==$1}@SRS_DOMAIN} \
		    {${if match {$sender_address_local_part}{\N^[sS][rR][sS]1=[^=]+=([^=]+)==(.+)\N} \
		    {${quote_local_part:SRS1=${length_5:${hmac{sha1}{SRS_SECRET}{${lc:$1&$2}}}}=$1==$2}@SRS_DOMAIN} \
		    {${quote_local_part:SRS0=${length_5:${hmac{sha1}{SRS_SECRET}{${lc:${eval:$tod_epoch/86400-SRS_OFFSET}&$sender_address_domain&$sender_address_local_part}}}}=${eval:$tod_epoch/86400-SRS_OFFSET}=$sender_address_domain=$sender_address_local_part}@SRS_DOMAIN} \
		    }}}
	driver = redirect
	data = ${quote_local_part:$local_part}@$domain
	headers_add = "X-SRS-Rewrite: SMTP return-path rewritten from <$sender_address> by $smtp_active_hostname"
	redirect_router = dnslookup
	no_verify

